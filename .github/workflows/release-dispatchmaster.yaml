name: Release - Dispatch to main

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        options:
          - tst
          - prd
      teknologi:
        type: boolean
        required: true
        default: false
      aks-infrastructure:
        type: boolean
        required: true
        default: false
      aks-configuration:
        type: boolean
        required: true
        default: false  
jobs:
  deploy-resources:
    if: inputs.teknologi == true || inputs.aks-infrastructure == true
    uses: ./.github/workflows/release-deployresources.yaml
    with:
      environment: ${{ inputs.environment }}
      teknologi: ${{ inputs.teknologi }}
      aks: ${{ inputs.aks-infrastructure }}
    secrets: inherit
  get-aks-clusters-to-configure:
    if: inputs.aks-configuration == true
    uses: ./.github/workflows/aks-get-clusters.yaml
    with:
      environment: ${{ inputs.environment }}
  configure-aks-cluster:
    needs: get-aks-clusters-to-configure
    if: ${{ needs.get-aks-clusters-to-configure.outputs.clusters }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster: ${{ fromJson(needs.get-aks-clusters-to-configure.outputs.clusters) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure Ingress Nginx
        uses: ./.github/actions/templates/k8s-deploy-nginx-ingress
        id: deploy-nginx-ingress
        with: 
          clustername: ${{ matrix.cluster.name }}
          resourcegroup: ${{ matrix.cluster.resourceGroupName }}
        env:
          AZURE_CREDENTIALS: ${{ secrets.BICEP_GITHUBACTIONS_iO }}
      - name: Configure Let's Encrypt
        uses: ./.github/actions/templates/k8s-deploy-letsencrypt
        id: deploy-letsencrypt
        with: 
          clustername: ${{ matrix.cluster.name }}
          resourcegroup: ${{ matrix.cluster.resourceGroupName }}
        env:
          AZURE_CREDENTIALS: ${{ secrets.BICEP_GITHUBACTIONS_iO }}